@startuml Diagram_class

title Diagram名前空間のクラス図

package Diagram <<Frame>>
{
  interface IRootNode
  {
    + DataNodes: IReadOnlyList<INode>
    + HasDataNodes: bool
    + BehaviorNodes: IReadONlyList<INode>
    + HasBehaviorNodes: bool
  }

  interface INode
  {
    + Name: string
    + Type: string
    + FullName: string
    + Accessibility: AccessLevel
  }

  enum AccessLevel
  {
    Private,
    Protected,
    PrivateProtected,
    InternalProtected,
    Internal,
    Public
  }

  class ClassNode
  {
    --<<impl INode>>--
    + Name: string
    + Type: string
    + FullName: string
    + Accessibility: AccessLevel
    --<<impl IRootNode>>--
    + DataNodes: IReadOnlyList<INode>
    + HasDataNodes: bool
    + BehaviorNodes: IReadONlyList<INode>
    + HasBehaviorNodes: bool
  }

  class FieldNode
  {
    --<<impl INode>>--
    + Name: string
    + Type: string
    + FullName: string
    + Accessibility: AccessLevel
  }

  class PropertyNode
  {
    --<<impl INode>>--
    + Name: string
    + Type: string
    + FullName: string
    + Accessibility: AccessLevel
  }

  class MethodNode
  {
    --<<impl INode>>--
    + Name: string
    + Type: string
    + Accessibility: AccessLevel
    --<<impl IOperationalNode>>--
    + FullName: string
    + Arguments: IReadOnlyList<INode>
    + HasArguments: bool
  }

  class ArgumentNode
  {
    --<<impl INode>>--
    + Name: string
    + Type: string
    + FullName: string
    + Accessibility: AccessLevel
  }

  interface IOperationalNode
  {
    + Arguments: IReadOnlyList<INode>
    + HasArguments: bool
    + NameWithArgs: string
    + <<override>> INode.FullName: string
    --<<impl INode>>--
    + Name: string
    + Type: string
    + Accessibility: AccessLevel
  }
}

FieldNode .u.|> INode
PropertyNode .u.|> INode
IRootNode .u.|> INode
ArgumentNode .u.|> INode
IOperationalNode .u.|> INode

MethodNode .u.|> IOperationalNode

ClassNode .u.|> IRootNode
ClassNode --> INode

INode -> AccessLevel

@enduml